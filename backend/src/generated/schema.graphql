### This file was generated by Nexus Schema
### Do not make changes to this file directly


type AuthPayload {
  token: String
  user: User
}

input CreateUserInput {
  email: String!
  name: String
  password: String!
  role: UserRole
}

type Mutation {
  addUser(input: CreateUserInput!): User
  changePassword(newPassword: String!, oldPassword: String!): User
  deleteUser(id: ID!): User
  login(email: String!, password: String!): AuthPayload
  updateUser(id: ID!, input: UpdateUserInput!): User
}

type Order {
  id: ID
  number: Int
}

type Query {
  me: User
}

input UpdateUserInput {
  email: String!
  name: String
  password: String
  role: UserRole
}

type User {
  email: String!
  id: ID!
  name: String
  role: UserRole!
}

enum UserRole {
  ADMINISTRATION
  EXECUTIVE
  FACTORY
}